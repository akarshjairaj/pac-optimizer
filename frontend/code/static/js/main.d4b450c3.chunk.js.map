{"version":3,"sources":["App.js","index.js"],"names":["App","useState","truckId","setTruckId","containerList","setContainerList","moveType","setMoveType","loading","setLoading","formFilled","setFormFilled","setError","responseJson","setResponseJson","className","type","value","placeholder","onChange","e","target","id","name","currentTarget","htmlFor","onClick","requestOptions","method","headers","body","JSON","stringify","truck_id","container_list","split","map","trim","move_type","fetch","then","res","json","result","console","log","error","catch","err","onSubmit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAoIeA,MAjIf,WAAgB,IAAD,EAEiBC,mBAAS,IAF1B,mBAENC,EAFM,KAEGC,EAFH,OAG6BF,mBAAS,IAHtC,mBAGNG,EAHM,KAGSC,EAHT,OAImBJ,mBAAS,IAJ5B,mBAINK,EAJM,KAIIC,EAJJ,OAKiBN,oBAAS,GAL1B,mBAKNO,EALM,KAKGC,EALH,OAMuBR,oBAAS,GANhC,mBAMNS,EANM,KAMMC,EANN,OAOaV,mBAAS,MAPtB,mBAOCW,GAPD,aAQ2BX,mBAAS,MARpC,mBAQNY,EARM,KAQQC,EARR,KA8Cb,OACE,yBAAKC,UAAU,OACb,gCACE,+CAICL,GACD,8BACE,6CACA,2BAAOM,KAAK,OACJC,MAAOf,EACPgB,YAAY,cACZC,SAAU,SAACC,GAAD,OAAOjB,EAAWiB,EAAEC,OAAOJ,UAC7C,6BACA,2BAAOD,KAAK,OACJC,MAAOb,EACPc,YAAY,oBACZC,SAAU,SAACC,GAAD,OAAOf,EAAiBe,EAAEC,OAAOJ,UACnD,6BACA,6BACE,2BAAOD,KAAK,QACJM,GAAG,SACHC,KAAK,SACLN,MAAM,SACNE,SAAU,SAACC,GAAD,OAAOb,EAAYa,EAAEI,cAAcP,UACrD,2BAAOQ,QAAQ,UAAf,UAEA,2BAAOT,KAAK,QACJM,GAAG,OACHC,KAAK,SACLN,MAAM,OACNE,SAAU,SAACC,GAAD,OAAOb,EAAYa,EAAEI,cAAcP,UACrD,2BAAOQ,QAAQ,QAAf,SAGF,6BACE,2BAAOT,KAAK,SAASU,QAAS,SAACN,GAAD,OAzEvB,WACfT,GAAc,GACdF,GAAW,GAEX,IAAMkB,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,SAAU/B,EACVgC,eAAgB9B,EAAc+B,MAAM,KAAKC,KAAI,SAAAb,GAAI,OAAIA,EAAKc,UAC1DC,UAAWhC,KAIfiC,MAAM,sCAAuCZ,GAC1Ca,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZ7B,EAAgB6B,GAChBlC,GAAW,MAEb,SAACqC,GACClC,EAASkC,GACTF,QAAQC,IAAIC,MAEbC,OAAM,SAAAC,GAAG,OAAIpC,EAASoC,MAgDoBC,QAOzCzC,GACA,wDAQF,gCACE,4CACA,8BAEEuB,KAAKC,UAAU,CACbC,SAAU/B,EACVgC,eAAgB9B,EAAc+B,MAAM,KAAKC,KAAI,SAAAb,GAAI,OAAIA,EAAKc,UAC1DC,UAAWhC,GACV,KAAM,KAMXO,GACA,gCACE,6CACA,8BAEEkB,KAAKC,UAAUnB,EAAc,KAAM,KAMzC,4BAAQa,QAAS,kBArFnBvB,EAAW,IACXE,EAAiB,IACjBE,EAAY,IACZE,GAAW,QACXE,GAAc,KAiFZ,aC1HNuC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d4b450c3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const [truckId, setTruckId] = useState('')\n  const [containerList, setContainerList] = useState('')\n  const [moveType, setMoveType] = useState('')\n  const [loading, setLoading] = useState(false);\n  const [formFilled, setFormFilled] = useState(false);\n  const [error, setError] = useState(null);\n  const [responseJson, setResponseJson] = useState(null)\n\n  const onSubmit = () => {\n    setFormFilled(true);\n    setLoading(true);\n    \n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        truck_id: truckId,\n        container_list: containerList.split(',').map(name => name.trim()),\n        move_type: moveType\n      })\n  };\n\n    fetch(\"http://127.0.0.1:5000/get_container\", requestOptions)\n      .then(res => res.json())\n      .then(result => {\n        console.log(result)\n        setResponseJson(result);\n        setLoading(false);\n      },\n      (error) => {\n        setError(error);\n        console.log(error);\n      })\n      .catch(err => setError(err))\n  }\n\n  const handleRefresh = () => {\n    setTruckId('');\n    setContainerList('');\n    setMoveType('');\n    setLoading(false);\n    setFormFilled(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>PAC OPTIMIZER</h1>\n      </header>\n\n      {\n        !formFilled &&\n        <main>\n          <h4>Enter details</h4>\n          <input type='text' \n                  value={truckId} \n                  placeholder='Truck ID...' \n                  onChange={(e) => setTruckId(e.target.value)}></input>\n          <br/>\n          <input type='text' \n                  value={containerList} \n                  placeholder='Container List...'\n                  onChange={(e) => setContainerList(e.target.value)}></input>\n          <br/>\n          <div>\n            <input type=\"radio\" \n                    id=\"Single\" \n                    name=\"gender\" \n                    value=\"Single\"\n                    onChange={(e) => setMoveType(e.currentTarget.value)} />\n            <label htmlFor=\"Single\">Single</label>\n\n            <input type=\"radio\" \n                    id=\"Dual\" \n                    name=\"gender\" \n                    value=\"Dual\"\n                    onChange={(e) => setMoveType(e.currentTarget.value)} />\n            <label htmlFor=\"Dual\">Dual</label>\n          </div>\n\n          <div>\n            <input type='submit' onClick={(e) => onSubmit()}  />\n          </div>\n        </main>\n      }\n      \n\n      {\n        loading && \n        <h3>Fetching container ID...</h3>\n      }\n\n      {/* {\n        !error && \n        <h2>An error occured in the API</h2>\n      } */}\n\n      <footer>\n        <h4>Request JSON</h4>\n        <code>\n        {\n          JSON.stringify({\n            truck_id: truckId,\n            container_list: containerList.split(',').map(name => name.trim()),\n            move_type: moveType\n          }, null, 2)\n        }\n        </code>\n      </footer>\n\n      {\n        responseJson &&\n        <footer>\n          <h4>Response JSON</h4>\n          <code>\n          {\n            JSON.stringify(responseJson, null, 2)\n          }\n          </code>\n      </footer>\n      }\n\n      <button onClick={() => handleRefresh()}>REFRESH</button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}